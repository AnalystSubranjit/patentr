% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/processPatentData.R
\name{getClaimFromURL}
\alias{getClaimFromURL}
\title{Get a claim from a Google Patents URL}
\usage{
getClaimFromURL(googleURL, langCode = "en", whichClaim = 1)
}
\arguments{
\item{googleURL}{The well-formatted google URL built from \code{\link{createGoogleURL}}.
It is a character value.}

\item{langCode}{The language code, used check for non-english text.}

\item{whichClaim}{Default set to 1, a numeric determining which claim to get. Note
if claim is out of bounds, the return claim will be a blank character.}
}
\value{
A character vector of the claim from each Google URL. If no claim exists, 
or if the country code is not on the inclusion list, an empty character value is returned 
for that index.
}
\description{
Input a valid Google Patents URL of the form given below and 
then get back a claim from the index of your choosing. If no claim exists or 
if your index is out of bounds, an  empty character string returns. 

The function works on strings that begin with the following sequence: 
\code{https://patents.google.com/patent/}. If the string sequence afterwards 
is invalid, a 404 status returns from the GET command and eventually an empty 
string returns.
}
\examples{

# works for USA
aclaim <- getClaimFromURL("https://patents.google.com/patent/US8818682B1/en")
print(aclaim)
# test WO, EP
woclaim <- getClaimFromURL("https://patents.google.com/patent/WO2015134152A1/en")
print(woclaim)
epclaim <- getClaimFromURL("https://patents.google.com/patent/EP2991875A1/en")
print(epclaim)
# test KR, JP, CN
krclaim <- getClaimFromURL("https://patents.google.com/patent/KR20150127745A/en")
cnclaim <- getClaimFromURL("https://patents.google.com/patent/CN104786953A/en")
jpclaim <- getClaimFromURL("https://patents.google.com/patent/JP2016173842A/en")
declaim <- getClaimFromURL("https://patents.google.com/patent/DE102014219223A1/en")

}
\seealso{
\code{\link{createGoogleURL}}, \code{\link{extractCountryCode}},
\code{\link{cleanGoogleURL}}
}
