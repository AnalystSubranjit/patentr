% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/cleanPatentData.R
\name{generateDocType}
\alias{generateDocType}
\title{Determine the patent document type}
\usage{
generateDocType(officeDocLength, countryAndKindCode,
  cakcDict = patentr::cakcDict,
  docLengthTypesDict = patentr::docLengthTypesDict)
}
\arguments{
\item{officeDocLength}{The concat value of country code and number of numerical digits. 
Extracted using the \code{\link{extractDocLength}} function.}

\item{countryAndKindCode}{The concat value of the country code and kind code. 
Extracted using the \code{\link{extractCountryCode}} and \code{\link{extractKindCode}} 
functions.}

\item{cakcDict}{A county and kind code dictionary. Default is \code{\link{cakcDict}}.}

\item{docLengthTypesDict}{A document length and type dictionary. Default is \code{\link{docLengthTypesDict}}.}
}
\value{
A vector of characters labeling the document type, with NA for when 
no match was found.
}
\description{
Determine the type of document from the patent publication data. 

Often times, data exports from publicly available sources do not provide the 
type of patent document, or, if provided, still requires standardization. By 
using the kind code, country code, and pre-developed dictionaries for doc length 
and country code, you can get a great approximation of the types of documents. 

Note that you can use View(lens[lens$docType=="NA",]) to view the not-found 
document types. Often times, these are small countries. You can add to the 
\code{\link{cakcDict}} to fix these. They are also useful to ignore if you 
only want to focus on the larger countries, which are all covered.
}
\examples{

acars <- acars
acars$pubNum <- extractPubNumber(acars$docNum) # pubnum, ex ####
acars$countryCode <- extractCountryCode(acars$docNum) # country code, ex USAPP, USD
acars$officeDocLength <- extractDocLength(countryCode = acars$countryCode, 
                                         pubNum = acars$pubNum) # cc + pub num length concat
acars$kindCode <- extractKindCode(acars$docNum)
acars$countryAndKindCode <- with(acars, paste0(countryCode, kindCode))
                                         
acars$docType <- generateDocType(officeDocLength = acars$officeDocLength,
                            countryAndKindCode = acars$countryAndKindCode,
                            cakcDict = cakcDict,
                            docLengthTypesDict = docLengthTypesDict)
table(acars$docType)



}
\seealso{
\code{\link{cakcDict}}, \code{\link{docLengthTypesDict}}
}
